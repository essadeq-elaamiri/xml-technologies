<svg version="1.1"
    width="300"
    height="200"
    xmlns="http://www.w3.org/2000/svg"
    >

    <rect width="100%" height="100%" fill="#44F6ED"/>
    <circle cx="150" cy="100" r="100" fill="#DDEE32" />
    <text x="150" y="125" font-size="60" text-anchor="middle" fill="#123312">Essadeq</text>
    <!--  text-anchor: we want the midpoint to be -->

    <!--
    ## Basic properties of SVG files
    The first important thing to notice is the order of rendering elements. The globally valid rule for SVG files is, that later elements are rendered atop previous elements. The further down an element is the more it will be visible.
    SVG files on the web can be displayed directly in the browser or embedded in HTML files via several methods:
    If the HTML is XHTML and is delivered as type application/xhtml+xml, the SVG can be directly embedded in the XML source.
    If the HTML is HTML5, and the browser is a conforming HTML5 browser, the SVG can also be directly embedded. However, there may be syntax changes necessary to conform to the HTML5 specification.
    The SVG file can be referenced with an object element:
            <object data="image.svg" type="image/svg+xml" />
    Likewise an iframe element can be used:
            <iframe src="image.svg"></iframe>
    An img element can theoretically be used too. However, this technique doesn't work in Firefox before 4.0.
    Finally, SVG can be created dynamically with JavaScript and injected into the HTML DOM. With this method, replacement technologies can be implemented for browsers which normally can't process SVG.
    -->
</svg>
